plugins {
    id 'org.springframework.boot' version '2.6.3' apply false
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.diffplug.spotless' version '5.14.3'
    id 'name.remal.sonarlint' version '1.5.0'
    id 'com.star-zero.gradle.githook' version '1.2.1'
    id 'ru.netris.commitlint' version '1.4.1'
    id 'java'
    id 'maven-publish'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

compileJava.dependsOn(processResources)

tasks.named('test') {
    useJUnitPlatform()
}

publishing {
    publications {
        library(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/paakmau/spring-boot-starter-template"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

spotless {
    java {
        importOrder()
        removeUnusedImports()

        googleJavaFormat('1.11.0').aosp()
    }

    groovyGradle {
        target '**/*.gradle'

        greclipse()

        indentWithSpaces()
    }

    json {
        target '**/*.json'

        eclipseWtp('json')

        indentWithSpaces()
    }

    format 'md', {
        target '**/*.md'

        indentWithSpaces(2)
        endWithNewline()
    }

    format 'yaml', {
        target  '**/*.yaml'

        trimTrailingWhitespace()
        indentWithSpaces(2)
        endWithNewline()
    }

    format 'dotfiles', {
        target '.gitignore', '.gitattributes'

        trimTrailingWhitespace()
        indentWithSpaces(2)
        endWithNewline()
    }
}

githook {
    hooks {
        'pre-commit' {
            task = 'spotlessCheck sonarlintMain sonarlintTest'
        }
        'commit-msg' {
            task = 'commitlint -Dmsgfile=\$1'
        }
    }
}
